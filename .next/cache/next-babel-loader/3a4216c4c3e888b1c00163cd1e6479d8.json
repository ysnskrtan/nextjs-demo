{"ast":null,"code":"var _jsxFileName = \"Y:\\\\Projects\\\\MobitaAcademy\\\\akademi\\\\pages\\\\quotes.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport Layout from '../comps/AppLayout';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const {\n    query\n  } = useRouter();\n  const {\n    data,\n    error\n  } = useSWR(`/api/randomQuote${query.author ? '?author=' + query.author : ''}`, fetcher); // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.author`\n\n  const author = data === null || data === void 0 ? void 0 : data.author;\n  let quote = data === null || data === void 0 ? void 0 : data.quote;\n  if (!data) quote = 'Loading...';\n  if (error) quote = 'Failed to fetch the quote.';\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"main\", {\n    className: \"jsx-1236022937\" + \" \" + \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-1236022937\" + \" \" + \"quote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, quote), author && __jsx(\"span\", {\n    className: \"jsx-1236022937\" + \" \" + \"author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"- \", author), __jsx(_JSXStyle, {\n    id: \"1236022937\",\n    __self: this\n  }, \"main.jsx-1236022937{width:90%;max-width:900px;margin:300px auto;text-align:center;}.quote.jsx-1236022937{font-family:cursive;color:#e243de;font-size:24px;padding-bottom:10px;}.author.jsx-1236022937{font-family:sans-serif;color:#559834;font-size:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlk6XFxQcm9qZWN0c1xcTW9iaXRhQWNhZGVteVxcYWthZGVtaVxccGFnZXNcXHF1b3Rlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0QmtCLEFBR3FCLEFBTVUsQUFNRyxVQVhQLFVBTUYsR0FNQSxHQVhJLFFBTUgsR0FNQSxPQVhHLEtBTUUsR0FNdEIsVUFYQSxPQU1BIiwiZmlsZSI6Ilk6XFxQcm9qZWN0c1xcTW9iaXRhQWNhZGVteVxcYWthZGVtaVxccGFnZXNcXHF1b3Rlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gJ25leHQvcm91dGVyJztcclxuaW1wb3J0IHVzZVNXUiBmcm9tICdzd3InO1xyXG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBzL0FwcExheW91dCdcclxuXHJcbmZ1bmN0aW9uIGZldGNoZXIodXJsKSB7XHJcbiAgcmV0dXJuIGZldGNoKHVybCkudGhlbihyID0+IHIuanNvbigpKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5kZXgoKSB7XHJcbiAgY29uc3QgeyBxdWVyeSB9ID0gdXNlUm91dGVyKCk7XHJcbiAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gdXNlU1dSKFxyXG4gICAgYC9hcGkvcmFuZG9tUXVvdGUke3F1ZXJ5LmF1dGhvciA/ICc/YXV0aG9yPScgKyBxdWVyeS5hdXRob3IgOiAnJ31gLFxyXG4gICAgZmV0Y2hlclxyXG4gICk7XHJcbiAgLy8gVGhlIGZvbGxvd2luZyBsaW5lIGhhcyBvcHRpb25hbCBjaGFpbmluZywgYWRkZWQgaW4gTmV4dC5qcyB2OS4xLjUsXHJcbiAgLy8gaXMgdGhlIHNhbWUgYXMgYGRhdGEgJiYgZGF0YS5hdXRob3JgXHJcbiAgY29uc3QgYXV0aG9yID0gZGF0YT8uYXV0aG9yO1xyXG4gIGxldCBxdW90ZSA9IGRhdGE/LnF1b3RlO1xyXG5cclxuICBpZiAoIWRhdGEpIHF1b3RlID0gJ0xvYWRpbmcuLi4nO1xyXG4gIGlmIChlcnJvcikgcXVvdGUgPSAnRmFpbGVkIHRvIGZldGNoIHRoZSBxdW90ZS4nO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPExheW91dD5cclxuICAgIDxtYWluIGNsYXNzTmFtZT1cImNlbnRlclwiPlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInF1b3RlXCI+e3F1b3RlfTwvZGl2PlxyXG4gICAgICB7YXV0aG9yICYmIDxzcGFuIGNsYXNzTmFtZT1cImF1dGhvclwiPi0ge2F1dGhvcn08L3NwYW4+fVxyXG5cclxuICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgIG1haW4ge1xyXG4gICAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgICAgIG1heC13aWR0aDogOTAwcHg7XHJcbiAgICAgICAgICBtYXJnaW46IDMwMHB4IGF1dG87XHJcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5xdW90ZSB7XHJcbiAgICAgICAgICBmb250LWZhbWlseTogY3Vyc2l2ZTtcclxuICAgICAgICAgIGNvbG9yOiAjZTI0M2RlO1xyXG4gICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICAgICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5hdXRob3Ige1xyXG4gICAgICAgICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICBjb2xvcjogIzU1OTgzNDtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICB9XHJcbiAgICAgIGB9PC9zdHlsZT5cclxuICAgIDwvbWFpbj5cclxuICAgIDwvTGF5b3V0PlxyXG4gICk7XHJcbn0iXX0= */\\n/*@ sourceURL=Y:\\\\\\\\Projects\\\\\\\\MobitaAcademy\\\\\\\\akademi\\\\\\\\pages\\\\\\\\quotes.js */\")));\n}","map":{"version":3,"sources":["Y:/Projects/MobitaAcademy/akademi/pages/quotes.js"],"names":["useRouter","useSWR","Layout","fetcher","url","fetch","then","r","json","Index","query","data","error","author","quote"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACD;;AAED,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAYV,SAAS,EAA3B;AACA,QAAM;AAAEW,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBX,MAAM,CAC3B,mBAAkBS,KAAK,CAACG,MAAN,GAAe,aAAaH,KAAK,CAACG,MAAlC,GAA2C,EAAG,EADrC,EAE5BV,OAF4B,CAA9B,CAF8B,CAM9B;AACA;;AACA,QAAMU,MAAM,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,MAArB;AACA,MAAIC,KAAK,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,KAAlB;AAEA,MAAI,CAACH,IAAL,EAAWG,KAAK,GAAG,YAAR;AACX,MAAIF,KAAJ,EAAWE,KAAK,GAAG,4BAAR;AAEX,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CADF,EAEGD,MAAM,IAAI;AAAA,wCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BA,MAA5B,CAFb;AAAA;AAAA;AAAA,wlFADA,CADF;AA4BD","sourcesContent":["import { useRouter } from 'next/router';\r\nimport useSWR from 'swr';\r\nimport Layout from '../comps/AppLayout'\r\n\r\nfunction fetcher(url) {\r\n  return fetch(url).then(r => r.json());\r\n}\r\n\r\nexport default function Index() {\r\n  const { query } = useRouter();\r\n  const { data, error } = useSWR(\r\n    `/api/randomQuote${query.author ? '?author=' + query.author : ''}`,\r\n    fetcher\r\n  );\r\n  // The following line has optional chaining, added in Next.js v9.1.5,\r\n  // is the same as `data && data.author`\r\n  const author = data?.author;\r\n  let quote = data?.quote;\r\n\r\n  if (!data) quote = 'Loading...';\r\n  if (error) quote = 'Failed to fetch the quote.';\r\n\r\n  return (\r\n    <Layout>\r\n    <main className=\"center\">\r\n      <div className=\"quote\">{quote}</div>\r\n      {author && <span className=\"author\">- {author}</span>}\r\n\r\n      <style jsx>{`\r\n        main {\r\n          width: 90%;\r\n          max-width: 900px;\r\n          margin: 300px auto;\r\n          text-align: center;\r\n        }\r\n        .quote {\r\n          font-family: cursive;\r\n          color: #e243de;\r\n          font-size: 24px;\r\n          padding-bottom: 10px;\r\n        }\r\n        .author {\r\n          font-family: sans-serif;\r\n          color: #559834;\r\n          font-size: 20px;\r\n        }\r\n      `}</style>\r\n    </main>\r\n    </Layout>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}